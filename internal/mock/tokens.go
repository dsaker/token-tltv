// Code generated by MockGen. DO NOT EDIT.
// Source: internal/models/tokens.go
//
// Generated by this command:
//
//	mockgen -package mock -destination=internal/mock/tokens.go -source=internal/models/tokens.go
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	models "talkliketv.click/tltv/internal/models"
)

// MockTokensX is a mock of TokensX interface.
type MockTokensX struct {
	ctrl     *gomock.Controller
	recorder *MockTokensXMockRecorder
	isgomock struct{}
}

// MockTokensXMockRecorder is the mock recorder for MockTokensX.
type MockTokensXMockRecorder struct {
	mock *MockTokensX
}

// NewMockTokensX creates a new mock instance.
func NewMockTokensX(ctrl *gomock.Controller) *MockTokensX {
	mock := &MockTokensX{ctrl: ctrl}
	mock.recorder = &MockTokensXMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokensX) EXPECT() *MockTokensXMockRecorder {
	return m.recorder
}

// AddToken mocks base method.
func (m *MockTokensX) AddToken(ctx context.Context, token models.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToken indicates an expected call of AddToken.
func (mr *MockTokensXMockRecorder) AddToken(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToken", reflect.TypeOf((*MockTokensX)(nil).AddToken), ctx, token)
}

// CheckToken mocks base method.
func (m *MockTokensX) CheckToken(c context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckToken", c, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckToken indicates an expected call of CheckToken.
func (mr *MockTokensXMockRecorder) CheckToken(c, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckToken", reflect.TypeOf((*MockTokensX)(nil).CheckToken), c, token)
}

// UpdateField mocks base method.
func (m *MockTokensX) UpdateField(c context.Context, value any, token, path string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateField", c, value, token, path)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateField indicates an expected call of UpdateField.
func (mr *MockTokensXMockRecorder) UpdateField(c, value, token, path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateField", reflect.TypeOf((*MockTokensX)(nil).UpdateField), c, value, token, path)
}
